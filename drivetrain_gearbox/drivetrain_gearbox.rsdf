<?xml version='1.0'?>
<%
    # Geometry in meters
    inches_to_meters = 0.0254
    height = 6 * inches_to_meters
    length = 5 * inches_to_meters
    width = 2 * inches_to_meters
    motor_distance_apart = 2.5 * inches_to_meters
    motor_height = 2 * inches_to_meters
    output_height = 1 * inches_to_meters
    output_radius = 1 * inches_to_meters
    output_length = 0.25 * inches_to_meters
    motor_length = 3.36 * inches_to_meters
    gear_ratio = 5
%> 
<sdf version='1.6'>
    <model name="Drivetrain_Gearbox">
        <link name="gearbox">
            <pose>0 <%= -(width/2.0)%> <%= (height/2.0)-output_height%> 0 0 0</pose>
            <collision name="gearbox_collision">
                <geometry>
                    <box>
                        <size><%= length%> <%= width%> <%= height%> 0 0 0</size>
                    </box>
                </geometry>
            </collision>
            <visual name="gearbox_visual">
                <geometry>
                    <box>
                        <size><%= length%> <%= width%> <%= height%> 0 0 0</size>
                    </box>
                </geometry>
            </visual>
        </link>
        <link name="output_gear">
            <pose> 0 <%= -(width/2.0)%> 0 <%= Math::PI/2%> 0 0</pose>
            <collision name="output_gear_collision">
                <geometry>
                    <cylinder>
                        <radius><%= output_radius%></radius>
                        <length><%= output_length%></length>
                    </cylinder>
                </geometry>
            </collision>
            <visual name="output_gear_visual">
                <geometry>
                    <cylinder>
                        <radius><%= output_radius%></radius>
                        <length><%= output_length%></length>
                    </cylinder>
                </geometry>
            </visual>
        </link>
        <joint name="output_gear_joint" type="revolute">
            <pose> 0 0 0 <%= Math::PI/2%> 0 0</pose>
            <child>output_gear</child>
            <parent>gearbox</parent>
            <axis> 
                <xyz>0.0 -1.0 0.0</xyz>
            </axis>
        </joint>
        <include>
            <uri>model://GazeboSim2019/mini_cim</uri>
            <pose>0 <%= -width%> <%= (Math.sqrt(motor_distance_apart**2-(motor_distance_apart/2.0)**2)/2.0)+motor_height%> <%= Math::PI*1.5%> 0 0</pose>
            <name>middle_cim</name>
        </include>
        <include>
            <uri>model://GazeboSim2019/mini_cim</uri>
            <pose><%= Math.sqrt(motor_distance_apart**2-(motor_distance_apart/2.0)**2)/2.0%> <%= -width%> <%= -(Math.sqrt(motor_distance_apart**2-(motor_distance_apart/2.0)**2)/2.0)+motor_height%> <%= Math::PI*1.5%> 0 0</pose>
            <name>back_cim</name>
        </include>
        <include>
            <uri>model://GazeboSim2019/mini_cim</uri>
            <pose><%= -(Math.sqrt(motor_distance_apart**2-(motor_distance_apart/2.0)**2)/2.0)%> <%= -width%> <%= -(Math.sqrt(motor_distance_apart**2-(motor_distance_apart/2.0)**2)/2.0)+motor_height%> <%= Math::PI*1.5%> 0 0</pose>
            <name>front_cim</name>
        </include>
        <joint type="fixed" name="middle_cim_joint">
            <pose>0 0 <%= motor_length/2.0%> 0 0 0</pose>
            <child>middle_cim::motor</child>
            <parent>gearbox</parent>
        </joint>
        <joint type="fixed" name="back_cim_joint">
            <pose>0 0 <%= motor_length/2.0%> 0 0 0</pose>            
            <child>back_cim::motor</child>
            <parent>gearbox</parent>
        </joint>
        <joint type="fixed" name="front_cim_joint">
            <pose>0 0 <%= motor_length/2.0%> 0 0 0</pose>
            <child>front_cim::motor</child>
            <parent>gearbox</parent>
        </joint>
        <!--<joint name="front_cim_output_joint" type="gearbox">
            <child>front_cim::motor_shaft<child>
            <parent>output_gear</parent>
            <gearbox_ratio><%= gear_ratio%></gearbox_ratio>
            <axis>
                <xyz>-->
    </model>
</sdf>
